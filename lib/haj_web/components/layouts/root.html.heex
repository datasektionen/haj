<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="csrf-token" content={csrf_token_value()} />
    <.live_title prefix="Haj · ">
      <%= assigns[:page_title] || "" %>
    </.live_title>
    <link phx-track-static rel="stylesheet" href={Routes.static_path(@conn, "/assets/app.css")} />
    <link rel="icon" type="image/svg+xml" href="/images/favicon.svg" />
    <link rel="icon" type="image/png" href="/images/favicon.png" />
    <meta name="description" content="Hemsida för METAspexet" />
    <script defer phx-track-static type="text/javascript" src={~p"/assets/app.js"}>
    </script>
  </head>
  <body class="">
    <%= @inner_content %>
  </body>

  <script>
    // Authorization scopes required by the API; multiple scopes can be
    // included, separated by spaces.
    const SCOPES = 'https://www.googleapis.com/auth/drive.metadata.readonly';

    // TODO(developer): Set to client ID and API key from the Developer Console
    const CLIENT_ID = '1060878436142-4cejf7vtpe28e5gi2tojshsr7ftbr9ic.apps.googleusercontent.com';

    /**
     * Callback after api.js is loaded.
     */
    function gapiLoaded() {
        gapi.load('client:picker', initializePicker);
    }

    /**
     * Callback after the API client is loaded. Loads the
     * discovery doc to initialize the API.
     */
    async function initializePicker() {
        await gapi.client.load('https://www.googleapis.com/discovery/v1/apis/drive/v3/rest');
        pickerInited = true;
    }

    /**
     * Callback after Google Identity Services are loaded.
     */
    function gisLoaded() {
        tokenClient = google.accounts.oauth2.initTokenClient({
            client_id: CLIENT_ID,
            scope: SCOPES,
            callback: '', // defined later
        });
        gisInited = true;
    }
      
  </script>

  <script async defer src="https://apis.google.com/js/api.js" onload="gapiLoaded()">
  </script>
  <script async defer src="https://accounts.google.com/gsi/client" onload="gisLoaded()">
  </script>
</html>
